import streamlit as st
import json
from Models.orchestra import LatestAiDevelopmentCrew
from datetime import datetime
from config import *
from PIL import Image
import os

os.environ["OPENAI_API_KEY"] = KEY
os.environ["CREWAI_EMBEDDING_MODEL"] = URL_EMBEDDINGS
icon = Image.open("initialData/mts_logo_cmyk.png")
st.set_page_config(
    page_title="–ú–¢–° –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ AI",
    page_icon=icon,
    layout="wide"
)

st.title("üìû –ú–¢–° –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ AI –û—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä")
st.markdown("""
–≠—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø–æ–º–æ–≥–∞–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ú–¢–° –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç—ã.
""")

with st.sidebar:
    st.header("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
    model_provider = st.selectbox(
        "–ü—Ä–æ–≤–∞–π–¥–µ—Ä –º–æ–¥–µ–ª–∏",
        ["Ollama (–ª–æ–∫–∞–ª—å–Ω—ã–π)", "OpenAI", "Anthropic"],
        index=0
    )
    
    if model_provider == "Ollama (–ª–æ–∫–∞–ª—å–Ω—ã–π)":
        model_name = st.selectbox(
            "–ú–æ–¥–µ–ª—å",
            ["llama3", "mistral", "neural-chat"],
            index=0
        )
    else:
        model_name = st.text_input("–ò–º—è –º–æ–¥–µ–ª–∏", "gpt-4")
    
    verbose_mode = st.checkbox("–ü–æ–¥—Ä–æ–±–Ω—ã–π –≤—ã–≤–æ–¥", value=True)
    st.markdown("---")
    st.markdown("**–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏**")
    st.markdown("""
    –≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è AI-–æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ú–¢–°.
    –°–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º –∞—Å–ø–µ–∫—Ç–∞–º:
    - –ù–∞–º–µ—Ä–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
    - –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    - –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ —Ä–µ—à–µ–Ω–∏–µ
    - CRM –æ—Ç—á–µ—Ç
    """)

with st.form("prompt_form"):
    client_query = st.text_area(
        "–ó–∞–ø—Ä–æ—Å –∫–ª–∏–µ–Ω—Ç–∞:",
        placeholder="–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –≤–æ–ø—Ä–æ—Å –∫–ª–∏–µ–Ω—Ç–∞...",
        height=150,
        value="–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–≤—è–∑–∏, —á—Ç–æ –º–Ω–µ –¥–µ–ª–∞—Ç—å, –∫ –∫–æ–º—É –º–Ω–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è?"
    )
    
    col1, col2 = st.columns(2)
    with col1:
        submit_button = st.form_submit_button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å", type="primary")
    with col2:
        clear_button = st.form_submit_button("–û—á–∏—Å—Ç–∏—Ç—å")

if submit_button:
    try:
        with st.spinner("–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫–ª–∏–µ–Ω—Ç–∞..."):
            crew_instance = LatestAiDevelopmentCrew()
            crew = crew_instance.crew()
            
            result = crew.kickoff(inputs={"topic": client_query})
            
            output_data = {
                'task_description': client_query,
                'execution_time': datetime.now().isoformat(),
                "results": {
                    "intent_analysis": str(crew.tasks[0].output),
                    "solution_proposal": str(crew.tasks[1].output),
                    "emotion_analysis": str(crew.tasks[2].output),
                    "action_s_agent": str(crew.tasks[3].output),
                    "summary_agent": str(crew.tasks[4].output),
                    "qa_agent": str(crew.tasks[5].output)
                }
            }
            
            st.success("–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!")
            
            tab1, tab2, tab3, tab4, tab5, tab6 = st.tabs([
                "üìå –ù–∞–º–µ—Ä–µ–Ω–∏–µ", "üîß –†–µ—à–µ–Ω–∏–µ", "üòä –≠–º–æ—Ü–∏–∏", 
                "üìù –î–µ–π—Å—Ç–≤–∏—è", "üìä CRM –æ—Ç—á–µ—Ç", "üí¨ –°–æ–≤–µ—Ç—ã –ø–æ –æ–±—â–µ–Ω–∏—é"
            ])
            
            with tab1:
                st.subheader("–ê–Ω–∞–ª–∏–∑ –Ω–∞–º–µ—Ä–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞")
                st.markdown(f"**–†–µ–∑—É–ª—å—Ç–∞—Ç:** {crew.tasks[0].output}")
                
            with tab2:
                st.subheader("–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ —Ä–µ—à–µ–Ω–∏–µ")
                st.markdown(f"**–†–µ—à–µ–Ω–∏–µ:** {crew.tasks[1].output}")
                
            with tab3:
                st.subheader("–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑")
                st.markdown(f"**–°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞:** {crew.tasks[2].output}")
                
            with tab4:
                st.subheader("–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è")
                st.markdown(f"**–ü–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π:** {crew.tasks[3].output}")
                
            with tab5:
                st.subheader("CRM –æ—Ç—á–µ—Ç")
                st.json(crew.tasks[4].output)
                
            with tab6:
                st.subheader("–°–æ–≤–µ—Ç—ã –ø–æ –æ–±—â–µ–Ω–∏—é —Å –∫–ª–∏–µ–Ω—Ç–æ–º")
                st.markdown(f"**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:** {crew.tasks[5].output}")
            
            json_result = json.dumps(output_data, ensure_ascii=False, indent=2)
            st.download_button(
                label="–°–∫–∞—á–∞—Ç—å –ø–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç (JSON)",
                data=json_result,
                file_name=f"mts_support_report_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json",
                mime="application/json"
            )
            
    except Exception as e:
        st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
        error_data = {
            "error": str(e),
            "timestamp": datetime.now().isoformat(),
            "input": client_query
        }
        st.json(error_data)

if clear_button or not submit_button:
    st.markdown("### –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:")
    examples = st.columns(3)
    
    with examples[0]:
        st.markdown("""
        **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–±–ª–µ–º–∞**  
        "–£ –º–µ–Ω—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ, —Ö–æ—Ç—è –¥–µ–Ω—å–≥–∏ –Ω–∞ —Å—á–µ—Ç—É –µ—Å—Ç—å"
        """)
        
    with examples[1]:
        st.markdown("""
        **–ë–∏–ª–ª–∏–Ω–≥**  
        "–ú–Ω–µ –ø—Ä–∏—à–ª–æ —Å–º—Å –æ —Å–ø–∏—Å–∞–Ω–∏–∏ 500 —Ä—É–±–ª–µ–π –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É, –∫–æ—Ç–æ—Ä—É—é —è –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª"
        """)
        
    with examples[2]:
        st.markdown("""
        **–ñ–∞–ª–æ–±–∞**  
        "–Ø —É–∂–µ —Ç—Ä–µ—Ç–∏–π —Ä–∞–∑ –∑–≤–æ–Ω—é –ø–æ –ø–æ–≤–æ–¥—É —ç—Ç–æ–π –ø—Ä–æ–±–ª–µ–º—ã, –Ω–æ –Ω–∏—á–µ–≥–æ –Ω–µ —Ä–µ—à–∞–µ—Ç—Å—è!"
        """)